# Retrieve the first 5 rows from the account_ordermodel table
query = "SELECT * FROM account_ordermodel LIMIT 5;"

# Execute query & put results into a dataframe
result = pd.read_sql_query(query, conn)

# Display result
print(result)



*Product Distribution and Revenue:*
query_product_distribution = """
    SELECT p.name AS product_name, COUNT(*) AS product_count, SUM(o.total_price) AS total_revenue
    FROM account_ordermodel o
    JOIN product_product p ON o.ordered_item = p.name
    GROUP BY p.name;
"""
result_product_distribution = pd.read_sql_query(query_product_distribution, conn)
print("\nProduct Distribution and Revenue:")
print(result_product_distribution)



*State-wise Analysis:*
query_state_analysis = """
    SELECT ba.state, COUNT(*) AS product_count, SUM(o.total_price) AS total_revenue,
           GROUP_CONCAT(p.name, ', ') AS top_5_products
    FROM account_ordermodel o
    JOIN account_billingaddress ba ON o.user_id = ba.user_id
    JOIN product_product p ON o.ordered_item = p.name
    GROUP BY ba.state
    ORDER BY product_count DESC;
"""
result_state_analysis = pd.read_sql_query(query_state_analysis, conn)
print("\nState-wise Analysis:")
print(result_state_analysis)



*Unpaid Orders:*
query_unpaid_orders = "SELECT COUNT(*) AS unpaid_orders, SUM(total_price) AS lost_revenue FROM account_ordermodel WHERE paid_status = 0;"
result_unpaid_orders = pd.read_sql_query(query_unpaid_orders, conn)
print("\nUnpaid Orders Analysis:")
print(result_unpaid_orders)



*Actual Revenue:*
query_actual_revenue = "SELECT SUM(total_price) AS actual_revenue FROM account_ordermodel WHERE paid_status = 1;"
result_actual_revenue = pd.read_sql_query(query_actual_revenue, conn)
print("\nActual Revenue:")
print(result_actual_revenue)



*Convert Rupees to USD:*
# The exchange rate is 1 Rupee to 0.012 USD
exchange_rate = 0.012

# Function to convert Rupees to USD
def convert_to_usd(amount_in_rupees):
    return amount_in_rupees * exchange_rate

# Convert actual revenue to USD
actual_revenue_in_rupees = 164342100  
actual_revenue_in_usd = convert_to_usd(actual_revenue_in_rupees)

# Display result
print(f"Actual Revenue in USD: {actual_revenue_in_usd:.2f}")



*Compare the actual revenue with the potential revenue from unpaid orders:*
actual_revenue_in_rupees = 164342100
lost_revenue_in_usd = 1973367.60

# Calculate the difference between actual and potential revenue
revenue_difference = actual_revenue_in_rupees - (lost_revenue_in_usd / exchange_rate)

# Display the result
print(f"Actual Revenue in USD: {actual_revenue_in_usd:.2f}")
print(f"Potential Revenue from Unpaid Orders in USD: {lost_revenue_in_usd:.2f}")
print(f"Difference: {revenue_difference:.2f} USD")




